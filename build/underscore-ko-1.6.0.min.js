!function(e){"function"==typeof define&&define.amd?define(["knockout","underscore"],e):e(window.ko,window._)}(function(e,n){var t=["each","forEach","map","collect","reduce","inject","foldl","reduceRight","foldr","find","detect","filter","select","filter_","select_","where","findWhere","reject","reject_","all","every","any","some","include","contains","invoke","invoke_","pluck","max","min","sortBy","sortBy_","groupBy","groupBy_","indexBy","countBy","sortedIndex","shuffle","shuffle_","sample","size","first","head","take","initial","last","rest","tail","drop","rest_","tail_","drop_","compact","compact_","flatten","flatten_","without","without_","partition","union","union_","intersection","difference","uniq","unique","uniq_","unique_","zip","zip_","object","indexOf","lastIndexOf","sortedIndex","range","chain"],i=["union","union_","intersection","intersection_","difference","difference_","zip","zip_"];n.each(n.union(t,i),function(t){e.observableArray.fn[t]||(e.observableArray.fn[t]=function(){var e=n.toArray(arguments);return n.include(i,t)&&n.each(e,function(n,i){"function"==typeof n&&n[t]&&(e[i]=n())}),e.splice(0,0,this()),"_"===t.substr(t.length-1,1)?this(n[t.substr(0,t.length-1)].apply(this,e)):n[t].apply(this,e)})})});